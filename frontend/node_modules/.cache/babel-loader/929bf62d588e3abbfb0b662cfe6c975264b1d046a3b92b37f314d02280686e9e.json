{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0627\\u0644\\u0645\\u0643\\u062A\\u0628\\\\Downloads\\\\projectt\\\\frontend\\\\src\\\\components\\\\Patients.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from './Table';\nimport EntityForm from './EntityForm';\nimport api from '../api/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Patients = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const [editingPatient, setEditingPatient] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const fetchPatients = async () => {\n    try {\n      const response = await api.get('/api/patients/');\n      const data = Array.isArray(response.data) ? response.data : response.data.results || response.data;\n      const patients = data.map(patient => {\n        var _patient$user, _patient$user2, _patient$user3, _patient$user4;\n        return {\n          id: patient.id,\n          first_name: (_patient$user = patient.user) === null || _patient$user === void 0 ? void 0 : _patient$user.first_name,\n          last_name: (_patient$user2 = patient.user) === null || _patient$user2 === void 0 ? void 0 : _patient$user2.last_name,\n          email: (_patient$user3 = patient.user) === null || _patient$user3 === void 0 ? void 0 : _patient$user3.email,\n          phone: ((_patient$user4 = patient.user) === null || _patient$user4 === void 0 ? void 0 : _patient$user4.phone) || '',\n          date_of_birth: patient.date_of_birth || '',\n          blood_group: patient.blood_group || '',\n          medical_history: patient.medical_history || ''\n        };\n      });\n      setPatients(patients);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const handleSubmit = async data => {\n    try {\n      const payload = {\n        user: {\n          email: data.email,\n          password: data.password,\n          first_name: data.first_name,\n          last_name: data.last_name\n        },\n        date_of_birth: data.date_of_birth,\n        blood_group: data.blood_group,\n        medical_history: data.medical_history\n      };\n      const url = editingPatient ? `/api/patients/${editingPatient.id}/` : '/api/patients/';\n      const method = editingPatient ? 'put' : 'post';\n      if (editingPatient) {\n        delete payload.user.password;\n      }\n      await api[method](url, payload);\n      fetchPatients();\n      setShowForm(false);\n      setEditingPatient(null);\n      setIsEdit(false);\n    } catch (error) {\n      console.error('Error saving patient:', error);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this patient?')) {\n      try {\n        await api.delete(`/api/patients/${id}/`);\n        fetchPatients();\n      } catch (error) {\n        console.error('Error deleting patient:', error);\n      }\n    }\n  };\n  const handleEdit = patient => {\n    setEditingPatient({\n      first_name: patient.first_name || '',\n      last_name: patient.last_name || '',\n      email: patient.email || '',\n      password: '',\n      date_of_birth: patient.date_of_birth || '',\n      blood_group: patient.blood_group || '',\n      medical_history: patient.medical_history || '',\n      id: patient.id\n    });\n    setShowForm(true);\n    setIsEdit(true);\n  };\n  const formFields = [{\n    name: 'first_name',\n    label: 'First Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'last_name',\n    label: 'Last Name',\n    type: 'text',\n    required: true\n  }, {\n    name: 'email',\n    label: 'Email',\n    type: 'email',\n    required: true\n  }, {\n    name: 'password',\n    label: 'Password',\n    type: 'password',\n    required: !isEdit\n  }, {\n    name: 'date_of_birth',\n    label: 'Date of Birth',\n    type: 'date',\n    required: false\n  }, {\n    name: 'blood_group',\n    label: 'Blood Group',\n    type: 'text',\n    required: false\n  }, {\n    name: 'medical_history',\n    label: 'Medical History',\n    type: 'text',\n    required: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-900\",\n        children: \"Patients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditingPatient(null);\n          setShowForm(true);\n          setIsEdit(false);\n        },\n        className: \"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\",\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(EntityForm, {\n        fields: formFields,\n        initialData: editingPatient || {},\n        onSubmit: handleSubmit,\n        onCancel: () => {\n          setShowForm(false);\n          setEditingPatient(null);\n          setIsEdit(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Table, {\n      headers: ['First Name', 'Last Name', 'Email', 'Date of Birth', 'Blood Group', 'Medical History'],\n      data: patients,\n      onEdit: handleEdit,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Patients, \"el1j6ZcwM4vrNDQSpy3xSzFSJrA=\");\n_c = Patients;\nexport default Patients;\nvar _c;\n$RefreshReg$(_c, \"Patients\");","map":{"version":3,"names":["React","useState","useEffect","Table","EntityForm","api","jsxDEV","_jsxDEV","Patients","_s","patients","setPatients","showForm","setShowForm","editingPatient","setEditingPatient","isEdit","setIsEdit","fetchPatients","response","get","data","Array","isArray","results","map","patient","_patient$user","_patient$user2","_patient$user3","_patient$user4","id","first_name","user","last_name","email","phone","date_of_birth","blood_group","medical_history","error","console","handleSubmit","payload","password","url","method","handleDelete","window","confirm","delete","handleEdit","formFields","name","label","type","required","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fields","initialData","onSubmit","onCancel","headers","onEdit","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/المكتب/Downloads/projectt/frontend/src/components/Patients.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from './Table';\r\nimport EntityForm from './EntityForm';\r\nimport api from '../api/config';\r\n\r\ninterface Patient {\r\n  id: number;\r\n  first_name: string;\r\n  last_name: string;\r\n  email: string;\r\n  phone: string;\r\n  date_of_birth: string;\r\n  blood_group: string;\r\n  medical_history: string;\r\n}\r\n\r\nconst Patients: React.FC = () => {\r\n  const [patients, setPatients] = useState<Patient[]>([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingPatient, setEditingPatient] = useState<any | null>(null);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await api.get('/api/patients/');\r\n      const data = Array.isArray(response.data) ? response.data : response.data.results || response.data;\r\n      const patients = data.map((patient: any) => ({\r\n        id: patient.id,\r\n        first_name: patient.user?.first_name,\r\n        last_name: patient.user?.last_name,\r\n        email: patient.user?.email,\r\n        phone: patient.user?.phone || '',\r\n        date_of_birth: patient.date_of_birth || '',\r\n        blood_group: patient.blood_group || '',\r\n        medical_history: patient.medical_history || '',\r\n      }));\r\n      setPatients(patients);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const handleSubmit = async (data: any) => {\r\n    try {\r\n      const payload = {\r\n        user: {\r\n          email: data.email,\r\n          password: data.password,\r\n          first_name: data.first_name,\r\n          last_name: data.last_name,\r\n        },\r\n        date_of_birth: data.date_of_birth,\r\n        blood_group: data.blood_group,\r\n        medical_history: data.medical_history,\r\n      };\r\n      const url = editingPatient\r\n        ? `/api/patients/${editingPatient.id}/`\r\n        : '/api/patients/';\r\n      const method = editingPatient ? 'put' : 'post';\r\n      if (editingPatient) {\r\n        delete payload.user.password;\r\n      }\r\n      await api[method](url, payload);\r\n      fetchPatients();\r\n      setShowForm(false);\r\n      setEditingPatient(null);\r\n      setIsEdit(false);\r\n    } catch (error) {\r\n      console.error('Error saving patient:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    if (window.confirm('Are you sure you want to delete this patient?')) {\r\n      try {\r\n        await api.delete(`/api/patients/${id}/`);\r\n        fetchPatients();\r\n      } catch (error) {\r\n        console.error('Error deleting patient:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = (patient: any) => {\r\n    setEditingPatient({\r\n      first_name: patient.first_name || '',\r\n      last_name: patient.last_name || '',\r\n      email: patient.email || '',\r\n      password: '',\r\n      date_of_birth: patient.date_of_birth || '',\r\n      blood_group: patient.blood_group || '',\r\n      medical_history: patient.medical_history || '',\r\n      id: patient.id,\r\n    });\r\n    setShowForm(true);\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const formFields = [\r\n    { name: 'first_name', label: 'First Name', type: 'text', required: true },\r\n    { name: 'last_name', label: 'Last Name', type: 'text', required: true },\r\n    { name: 'email', label: 'Email', type: 'email', required: true },\r\n    { name: 'password', label: 'Password', type: 'password', required: !isEdit },\r\n    { name: 'date_of_birth', label: 'Date of Birth', type: 'date', required: false },\r\n    { name: 'blood_group', label: 'Blood Group', type: 'text', required: false },\r\n    { name: 'medical_history', label: 'Medical History', type: 'text', required: false },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900\">Patients</h2>\r\n        <button\r\n          onClick={() => {\r\n            setEditingPatient(null);\r\n            setShowForm(true);\r\n            setIsEdit(false);\r\n          }}\r\n          className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\r\n        >\r\n          Add Patient\r\n        </button>\r\n      </div>\r\n\r\n      {showForm ? (\r\n        <div className=\"mb-6\">\r\n          <EntityForm\r\n            fields={formFields}\r\n            initialData={editingPatient || {}}\r\n            onSubmit={handleSubmit}\r\n            onCancel={() => {\r\n              setShowForm(false);\r\n              setEditingPatient(null);\r\n              setIsEdit(false);\r\n            }}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      <Table\r\n        headers={['First Name', 'Last Name', 'Email', 'Date of Birth', 'Blood Group', 'Medical History']}\r\n        data={patients}\r\n        onEdit={handleEdit}\r\n        onDelete={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Patients; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}