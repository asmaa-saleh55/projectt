{"ast":null,"code":"import api from './config';\nexport const authService = {\n  async login(credentials) {\n    try {\n      console.log('Attempting login with:', credentials.email);\n      const response = await api.post('/api/token/', {\n        email: credentials.email,\n        password: credentials.password\n      });\n      console.log('Token response:', response.data);\n      if (response.data.access) {\n        localStorage.setItem('token', response.data.access);\n        localStorage.setItem('refresh_token', response.data.refresh);\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n        console.log('Fetching user profile...');\n        const userResponse = await api.get('/api/users/me/');\n        console.log('User profile response:', userResponse.data);\n        let userData = userResponse.data;\n        const transformedUser = {\n          id: userData.id,\n          email: userData.email,\n          firstName: userData.first_name,\n          lastName: userData.last_name,\n          role: userData.is_superuser ? 'ADMIN' : userData.role,\n          isSuperuser: userData.is_superuser,\n          isStaff: userData.is_staff\n        };\n        console.log('Transformed user data:', transformedUser);\n        localStorage.setItem('user', JSON.stringify(transformedUser));\n        return {\n          token: response.data.access,\n          user: transformedUser\n        };\n      }\n      throw new Error('No access token in response');\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Login error details:', {\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n        message: error.message\n      });\n      throw error;\n    }\n  },\n  async register(data) {\n    const backendData = {\n      first_name: data.firstName,\n      last_name: data.lastName,\n      email: data.email,\n      password: data.password,\n      role: data.role.toUpperCase(),\n      specialization: data.specialization,\n      experience_years: data.experienceYears,\n      qualification: data.qualification,\n      consultation_fee: data.consultationFee,\n      available_days: data.availableDays,\n      available_times: data.availableTimes\n    };\n    const response = await api.post('/api/register/', backendData);\n    if (response.data.tokens.access) {\n      const transformedUser = {\n        id: response.data.user.id,\n        email: response.data.user.email,\n        firstName: response.data.user.first_name,\n        lastName: response.data.user.last_name,\n        role: response.data.user.role,\n        isSuperuser: response.data.user.is_superuser,\n        isStaff: response.data.user.is_staff\n      };\n      localStorage.setItem('token', response.data.tokens.access);\n      localStorage.setItem('refresh_token', response.data.tokens.refresh);\n      localStorage.setItem('user', JSON.stringify(transformedUser));\n      return {\n        token: response.data.tokens.access,\n        user: transformedUser\n      };\n    }\n    throw new Error('Registration failed');\n  },\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  getCurrentUser() {\n    const userStr = localStorage.getItem('user');\n    if (userStr) return JSON.parse(userStr);\n    return null;\n  },\n  getToken() {\n    return localStorage.getItem('token');\n  }\n};","map":{"version":3,"names":["api","authService","login","credentials","console","log","email","response","post","password","data","access","localStorage","setItem","refresh","defaults","headers","common","userResponse","get","userData","transformedUser","id","firstName","first_name","lastName","last_name","role","is_superuser","isSuperuser","isStaff","is_staff","JSON","stringify","token","user","Error","error","_error$response","_error$response2","status","message","register","backendData","toUpperCase","specialization","experience_years","experienceYears","qualification","consultation_fee","consultationFee","available_days","availableDays","available_times","availableTimes","tokens","logout","removeItem","getCurrentUser","userStr","getItem","parse","getToken"],"sources":["C:/Users/المكتب/Downloads/projectt/frontend/src/api/auth.ts"],"sourcesContent":["import api from './config';\r\n\r\nexport interface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterData extends LoginCredentials {\r\n  firstName: string;\r\n  lastName: string;\r\n  role: 'patient' | 'doctor';\r\n  specialization?: string;\r\n  experienceYears?: number;\r\n  qualification?: string;\r\n  consultationFee?: number;\r\n  availableDays?: string[];\r\n  availableTimes?: string[];\r\n}\r\n\r\ninterface AuthResponse {\r\n  token: string;\r\n  user: {\r\n    id: string;\r\n    email: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    role: string;\r\n    isSuperuser?: boolean;\r\n    isStaff?: boolean;\r\n  };\r\n}\r\n\r\nexport const authService = {\r\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\r\n    try {\r\n      console.log('Attempting login with:', credentials.email);\r\n      const response = await api.post('/api/token/', {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      });\r\n      console.log('Token response:', response.data);\r\n\r\n      if (response.data.access) {\r\n        localStorage.setItem('token', response.data.access);\r\n        localStorage.setItem('refresh_token', response.data.refresh);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n        \r\n        console.log('Fetching user profile...');\r\n        const userResponse = await api.get('/api/users/me/');\r\n        console.log('User profile response:', userResponse.data);\r\n        \r\n        let userData = userResponse.data;\r\n        \r\n        const transformedUser = {\r\n          id: userData.id,\r\n          email: userData.email,\r\n          firstName: userData.first_name,\r\n          lastName: userData.last_name,\r\n          role: userData.is_superuser ? 'ADMIN' : userData.role,\r\n          isSuperuser: userData.is_superuser,\r\n          isStaff: userData.is_staff\r\n        };\r\n        console.log('Transformed user data:', transformedUser);\r\n\r\n        localStorage.setItem('user', JSON.stringify(transformedUser));\r\n        return {\r\n          token: response.data.access,\r\n          user: transformedUser\r\n        };\r\n      }\r\n      throw new Error('No access token in response');\r\n    } catch (error: any) {\r\n      console.error('Login error details:', {\r\n        status: error.response?.status,\r\n        data: error.response?.data,\r\n        message: error.message\r\n      });\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async register(data: RegisterData): Promise<AuthResponse> {\r\n    const backendData = {\r\n      first_name: data.firstName,\r\n      last_name: data.lastName,\r\n      email: data.email,\r\n      password: data.password,\r\n      role: data.role.toUpperCase(),\r\n      specialization: data.specialization,\r\n      experience_years: data.experienceYears,\r\n      qualification: data.qualification,\r\n      consultation_fee: data.consultationFee,\r\n      available_days: data.availableDays,\r\n      available_times: data.availableTimes\r\n    };\r\n\r\n    const response = await api.post('/api/register/', backendData);\r\n    if (response.data.tokens.access) {\r\n      const transformedUser = {\r\n        id: response.data.user.id,\r\n        email: response.data.user.email,\r\n        firstName: response.data.user.first_name,\r\n        lastName: response.data.user.last_name,\r\n        role: response.data.user.role,\r\n        isSuperuser: response.data.user.is_superuser,\r\n        isStaff: response.data.user.is_staff\r\n      };\r\n\r\n      localStorage.setItem('token', response.data.tokens.access);\r\n      localStorage.setItem('refresh_token', response.data.tokens.refresh);\r\n      localStorage.setItem('user', JSON.stringify(transformedUser));\r\n      \r\n      return {\r\n        token: response.data.tokens.access,\r\n        user: transformedUser\r\n      };\r\n    }\r\n    throw new Error('Registration failed');\r\n  },\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('refresh_token');\r\n    localStorage.removeItem('user');\r\n    delete api.defaults.headers.common['Authorization'];\r\n  },\r\n\r\n  getCurrentUser(): any {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) return JSON.parse(userStr);\r\n    return null;\r\n  },\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem('token');\r\n  }\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}